networks:
    watcher_network:
    default:
        external:
            name: bridge

services:
    # watcher_nginx:
    #     build:
    #         context: ./docker/nginx
    #     image: watcher-nginx
    #     container_name: watcher-nginx
    #     restart: unless-stopped
    #     ports:
    #         - '8888:8888'
    #     environment:
    #         - BACKEND_ADMIN_UI_BASE_PATH=${BACKEND_ADMIN_UI_BASE_PATH:?err}
    #         - BACKEND_API_BASE_PATH=${BACKEND_API_BASE_PATH:?err}
    #         - BACKEND_PORT=${BACKEND_PORT:?err}
    #         - FRONTEND_PORT=${FRONTEND_PORT:?err}
    #     networks:
    #         - watcher_network

    # watcher_backend:
    #     build:
    #         dockerfile: ./Dockerfile
    #         target: backend
    #     image: watcher-backend
    #     container_name: watcher-backend
    #     restart: unless-stopped
    #     ports:
    #         - '3000:3000'
    #     environment:
    #         - PORT=${BACKEND_PORT:?err}
    #         - ADMIN_UI_BASE_PATH=${BACKEND_ADMIN_UI_BASE_PATH:?err}
    #         - API_BASE_PATH=${BACKEND_API_BASE_PATH:?err}
    #         - DATABASE_URI=${DATABASE_URI:?err}
    #         - PAYLOAD_SECRET=${PAYLOAD_SECRET:?err}
    #     networks:
    #         - watcher_network

    watcher_frontend:
        build:
            dockerfile: ./Dockerfile
            target: frontend
        image: watcher-frontend
        container_name: watcher-frontend
        restart: unless-stopped
        networks:
            - watcher_network
            - default
