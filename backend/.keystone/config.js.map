{
  "version": 3,
  "sources": ["../keystone.ts", "../src/portfolio/categories/category.keystone-schema.ts", "../src/portfolio/projects/project.keystone-schema.ts", "../src/portfolio/portfolio.keystone-lists.ts", "../src/users/user.schema.ts", "../src/keystone/lists.ts", "../src/auth/index.ts"],
  "sourcesContent": ["import {config} from '@keystone-6/core';\nimport {Lists} from './src/keystone/lists';\nimport {withAuth, session} from './src/auth';\n\nexport default withAuth(\n    config({\n        db: {provider: 'sqlite', url: 'file:./keystone.db'},\n        session,\n        lists: Lists,\n    }),\n);\n", "import {list} from '@keystone-6/core';\nimport {allowAll} from '@keystone-6/core/access';\nimport {relationship, text} from '@keystone-6/core/fields';\n\nexport const categoryKeystoneSchema = list({\n    access: allowAll,\n    fields: {\n        name: text({isIndexed: 'unique'}),\n        projects: relationship({ref: 'Project.categories', many: true}),\n    },\n});\n", "import {list} from '@keystone-6/core';\nimport {allowAll} from '@keystone-6/core/access';\nimport {relationship, text} from '@keystone-6/core/fields';\n\nexport const projectKeystoneSchema = list({\n    access: allowAll,\n    fields: {\n        name: text(),\n        caption: text(),\n        categories: relationship({ref: 'Category.projects', many: true}),\n    },\n});\n", "import {categoryKeystoneSchema} from './categories/category.keystone-schema';\nimport {projectKeystoneSchema} from './projects/project.keystone-schema';\n\nexport const portfolioKeystoneLists = {\n    Category: categoryKeystoneSchema,\n    Project: projectKeystoneSchema,\n};\n", "import {list} from '@keystone-6/core';\nimport {checkbox, password, text} from '@keystone-6/core/fields';\n\ntype Session = {\n    data: {\n        id: string;\n        isAdmin: boolean;\n        isSuperAdmin: boolean;\n    };\n};\n\nconst isAdmin = ({session}: {session?: Session}) =>\n    Boolean(session?.data.isAdmin);\n\nexport const UserSchema = list({\n    fields: {\n        name: text(),\n        surname: text(),\n        email: text({isIndexed: 'unique'}),\n        password: password(),\n        isAdmin: checkbox(),\n        isSuperAdmin: checkbox(),\n    },\n    access: {\n        operation: {\n            query: () => true,\n            create: isAdmin,\n            delete: isAdmin,\n            update: isAdmin,\n        },\n    },\n});\n", "import {portfolioKeystoneLists} from '../portfolio/portfolio.keystone-lists';\nimport {UserSchema} from '../users/user.schema';\n\nexport const Lists = {\n    User: UserSchema,\n    ...portfolioKeystoneLists,\n};\n", "import {createAuth} from '@keystone-6/auth';\nimport {statelessSessions} from '@keystone-6/core/session';\nimport {randomBytes} from 'crypto';\n\nconst {withAuth} = createAuth({\n    listKey: 'User',\n    identityField: 'email',\n    secretField: 'password',\n    sessionData: 'isAdmin isSuperAdmin',\n});\n\n// Age in seconds\nconst sessionMaxAge = 60 * 60 * 24 * 30;\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\n    sessionSecret = randomBytes(32).toString('hex');\n}\n\nconst session = statelessSessions({\n    maxAge: sessionMaxAge,\n    secret: sessionSecret!,\n});\n\nexport {withAuth, session};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,eAAqB;;;ACArB,kBAAmB;AACnB,oBAAuB;AACvB,oBAAiC;AAE1B,IAAM,6BAAyB,kBAAK;AAAA,EACvC,QAAQ;AAAA,EACR,QAAQ;AAAA,IACJ,UAAM,oBAAK,EAAC,WAAW,SAAQ,CAAC;AAAA,IAChC,cAAU,4BAAa,EAAC,KAAK,sBAAsB,MAAM,KAAI,CAAC;AAAA,EAClE;AACJ,CAAC;;;ACVD,IAAAC,eAAmB;AACnB,IAAAC,iBAAuB;AACvB,IAAAC,iBAAiC;AAE1B,IAAM,4BAAwB,mBAAK;AAAA,EACtC,QAAQ;AAAA,EACR,QAAQ;AAAA,IACJ,UAAM,qBAAK;AAAA,IACX,aAAS,qBAAK;AAAA,IACd,gBAAY,6BAAa,EAAC,KAAK,qBAAqB,MAAM,KAAI,CAAC;AAAA,EACnE;AACJ,CAAC;;;ACRM,IAAM,yBAAyB;AAAA,EAClC,UAAU;AAAA,EACV,SAAS;AACb;;;ACNA,IAAAC,eAAmB;AACnB,IAAAC,iBAAuC;AAUvC,IAAM,UAAU,CAAC,EAAC,SAAAC,SAAO,MACrB,QAAQA,UAAS,KAAK,OAAO;AAE1B,IAAM,iBAAa,mBAAK;AAAA,EAC3B,QAAQ;AAAA,IACJ,UAAM,qBAAK;AAAA,IACX,aAAS,qBAAK;AAAA,IACd,WAAO,qBAAK,EAAC,WAAW,SAAQ,CAAC;AAAA,IACjC,cAAU,yBAAS;AAAA,IACnB,aAAS,yBAAS;AAAA,IAClB,kBAAc,yBAAS;AAAA,EAC3B;AAAA,EACA,QAAQ;AAAA,IACJ,WAAW;AAAA,MACP,OAAO,MAAM;AAAA,MACb,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IACZ;AAAA,EACJ;AACJ,CAAC;;;AC5BM,IAAM,QAAQ;AAAA,EACjB,MAAM;AAAA,EACN,GAAG;AACP;;;ACNA,kBAAyB;AACzB,qBAAgC;AAChC,oBAA0B;AAE1B,IAAM,EAAC,SAAQ,QAAI,wBAAW;AAAA,EAC1B,SAAS;AAAA,EACT,eAAe;AAAA,EACf,aAAa;AAAA,EACb,aAAa;AACjB,CAAC;AAGD,IAAM,gBAAgB,KAAK,KAAK,KAAK;AACrC,IAAI,gBAAgB,QAAQ,IAAI;AAChC,IAAI,CAAC,iBAAiB,QAAQ,IAAI,aAAa,cAAc;AACzD,sBAAgB,2BAAY,EAAE,EAAE,SAAS,KAAK;AAClD;AAEA,IAAM,cAAU,kCAAkB;AAAA,EAC9B,QAAQ;AAAA,EACR,QAAQ;AACZ,CAAC;;;ANjBD,IAAO,mBAAQ;AAAA,MACX,qBAAO;AAAA,IACH,IAAI,EAAC,UAAU,UAAU,KAAK,qBAAoB;AAAA,IAClD;AAAA,IACA,OAAO;AAAA,EACX,CAAC;AACL;",
  "names": ["import_core", "import_core", "import_access", "import_fields", "import_core", "import_fields", "session"]
}
